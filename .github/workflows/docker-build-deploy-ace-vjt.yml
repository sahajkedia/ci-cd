name: Server Deployment

on:
  push:
    branches:
      - vjt-ace
    paths:
      - "Dockerfile"
      - "docker-compose.yml"
      - "**.py"
      - "requirements.txt"
      - ".github/workflows/**"

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'vjt-ace') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH and environment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VJT_ACE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Prepare docker-compose file
        run: |
          sed "s|\${GITHUB_REPOSITORY}|${{ github.repository }}|g" docker-compose.yml > docker-compose.prod.yml
          cat docker-compose.prod.yml

      - name: Copy Docker Compose file
        run: |
          scp -i ~/.ssh/id_rsa docker-compose.prod.yml ${{ secrets.VJT_ACE_USER }}@${{ secrets.VJT_ACE_HOST }}:~/vjt_ace_app/docker-compose.yml

      - name: Deploy to server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VJT_ACE_USER }}@${{ secrets.VJT_ACE_HOST }} << 'EOF'
            set -ex
            cd ~/vjt_ace_app
            
            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi
            
            # Install Docker Compose if not installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found, installing..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # Login to GitHub Container Registry
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Deploy
            docker-compose pull
            docker-compose up -d
            
            # Cleanup
            docker image prune -f
            
            # Check deployment status
            docker ps
            docker-compose logs --tail=50
          EOF

      

      - name: Verify Deployment
        run: |
          echo "Waiting for application to be ready..."
          for i in {1..10}; do
            if curl -s "http://${{ secrets.VJT_ACE_HOST }}:8501/_stcore/health" > /dev/null; then
              echo "Application is up and running!"
              echo "Access your application at: http://${{ secrets.VJT_ACE_HOST }}:8501"
              exit 0
            fi
            echo "Attempt $i: Application not ready yet..."
            sleep 10
          done
          echo "Application failed to start within timeout"
          exit 1